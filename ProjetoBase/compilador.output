Terminals unused in grammar

    ATRIBUICAO
    LABEL
    TYPE
    PROCEDURE
    FUNCTION
    GOTO
    IF
    THEN
    ELSE
    WHILE
    DO
    ARRAY
    OF
    ABRE_CONCHETES
    FECHA_CONCHETES
    DIV
    AND
    NOT
    OR


Grammar

    0 $accept: programa $end

    1 $@1: ε

    2 programa: $@1 PROGRAM IDENT ABRE_PARENTESES lista_idents FECHA_PARENTESES PONTO_E_VIRGULA bloco PONTO

    3 $@2: ε

    4 $@3: ε

    5 bloco: parte_declara_vars $@2 $@3 comando_composto

    6 $@4: ε

    7 parte_declara_vars: $@4 VAR var DOIS_PONTOS tipo PONTO_E_VIRGULA

    8 var: var VIRGULA declara_vars
    9    | declara_vars

   10 $@5: ε

   11 declara_vars: $@5 IDENT

   12 tipo: IDENT

   13 lista_idents: lista_idents VIRGULA IDENT
   14             | IDENT

   15 comando_composto: T_BEGIN comandos T_END

   16 comandos: ε


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    PROGRAM (258) 2
    ABRE_PARENTESES (259) 2
    FECHA_PARENTESES (260) 2
    VIRGULA (261) 8 13
    PONTO_E_VIRGULA (262) 2 7
    DOIS_PONTOS (263) 7
    PONTO (264) 2
    T_BEGIN (265) 15
    T_END (266) 15
    VAR (267) 7
    IDENT (268) 2 11 12 13 14
    ATRIBUICAO (269)
    LABEL (270)
    TYPE (271)
    PROCEDURE (272)
    FUNCTION (273)
    GOTO (274)
    IF (275)
    THEN (276)
    ELSE (277)
    WHILE (278)
    DO (279)
    ARRAY (280)
    OF (281)
    ABRE_CONCHETES (282)
    FECHA_CONCHETES (283)
    DIV (284)
    AND (285)
    NOT (286)
    OR (287)


Nonterminals, with rules where they appear

    $accept (33)
        on left: 0
    programa (34)
        on left: 2
        on right: 0
    $@1 (35)
        on left: 1
        on right: 2
    bloco (36)
        on left: 5
        on right: 2
    $@2 (37)
        on left: 3
        on right: 5
    $@3 (38)
        on left: 4
        on right: 5
    parte_declara_vars (39)
        on left: 7
        on right: 5
    $@4 (40)
        on left: 6
        on right: 7
    var (41)
        on left: 8 9
        on right: 7 8
    declara_vars (42)
        on left: 11
        on right: 8 9
    $@5 (43)
        on left: 10
        on right: 11
    tipo (44)
        on left: 12
        on right: 7
    lista_idents (45)
        on left: 13 14
        on right: 2 13
    comando_composto (46)
        on left: 15
        on right: 5
    comandos (47)
        on left: 16
        on right: 15


State 0

    0 $accept: • programa $end

    $default  reduce using rule 1 ($@1)

    programa  go to state 1
    $@1       go to state 2


State 1

    0 $accept: programa • $end

    $end  shift, and go to state 3


State 2

    2 programa: $@1 • PROGRAM IDENT ABRE_PARENTESES lista_idents FECHA_PARENTESES PONTO_E_VIRGULA bloco PONTO

    PROGRAM  shift, and go to state 4


State 3

    0 $accept: programa $end •

    $default  accept


State 4

    2 programa: $@1 PROGRAM • IDENT ABRE_PARENTESES lista_idents FECHA_PARENTESES PONTO_E_VIRGULA bloco PONTO

    IDENT  shift, and go to state 5


State 5

    2 programa: $@1 PROGRAM IDENT • ABRE_PARENTESES lista_idents FECHA_PARENTESES PONTO_E_VIRGULA bloco PONTO

    ABRE_PARENTESES  shift, and go to state 6


State 6

    2 programa: $@1 PROGRAM IDENT ABRE_PARENTESES • lista_idents FECHA_PARENTESES PONTO_E_VIRGULA bloco PONTO

    IDENT  shift, and go to state 7

    lista_idents  go to state 8


State 7

   14 lista_idents: IDENT •

    $default  reduce using rule 14 (lista_idents)


State 8

    2 programa: $@1 PROGRAM IDENT ABRE_PARENTESES lista_idents • FECHA_PARENTESES PONTO_E_VIRGULA bloco PONTO
   13 lista_idents: lista_idents • VIRGULA IDENT

    FECHA_PARENTESES  shift, and go to state 9
    VIRGULA           shift, and go to state 10


State 9

    2 programa: $@1 PROGRAM IDENT ABRE_PARENTESES lista_idents FECHA_PARENTESES • PONTO_E_VIRGULA bloco PONTO

    PONTO_E_VIRGULA  shift, and go to state 11


State 10

   13 lista_idents: lista_idents VIRGULA • IDENT

    IDENT  shift, and go to state 12


State 11

    2 programa: $@1 PROGRAM IDENT ABRE_PARENTESES lista_idents FECHA_PARENTESES PONTO_E_VIRGULA • bloco PONTO

    $default  reduce using rule 6 ($@4)

    bloco               go to state 13
    parte_declara_vars  go to state 14
    $@4                 go to state 15


State 12

   13 lista_idents: lista_idents VIRGULA IDENT •

    $default  reduce using rule 13 (lista_idents)


State 13

    2 programa: $@1 PROGRAM IDENT ABRE_PARENTESES lista_idents FECHA_PARENTESES PONTO_E_VIRGULA bloco • PONTO

    PONTO  shift, and go to state 16


State 14

    5 bloco: parte_declara_vars • $@2 $@3 comando_composto

    $default  reduce using rule 3 ($@2)

    $@2  go to state 17


State 15

    7 parte_declara_vars: $@4 • VAR var DOIS_PONTOS tipo PONTO_E_VIRGULA

    VAR  shift, and go to state 18


State 16

    2 programa: $@1 PROGRAM IDENT ABRE_PARENTESES lista_idents FECHA_PARENTESES PONTO_E_VIRGULA bloco PONTO •

    $default  reduce using rule 2 (programa)


State 17

    5 bloco: parte_declara_vars $@2 • $@3 comando_composto

    $default  reduce using rule 4 ($@3)

    $@3  go to state 19


State 18

    7 parte_declara_vars: $@4 VAR • var DOIS_PONTOS tipo PONTO_E_VIRGULA

    $default  reduce using rule 10 ($@5)

    var           go to state 20
    declara_vars  go to state 21
    $@5           go to state 22


State 19

    5 bloco: parte_declara_vars $@2 $@3 • comando_composto

    T_BEGIN  shift, and go to state 23

    comando_composto  go to state 24


State 20

    7 parte_declara_vars: $@4 VAR var • DOIS_PONTOS tipo PONTO_E_VIRGULA
    8 var: var • VIRGULA declara_vars

    VIRGULA      shift, and go to state 25
    DOIS_PONTOS  shift, and go to state 26


State 21

    9 var: declara_vars •

    $default  reduce using rule 9 (var)


State 22

   11 declara_vars: $@5 • IDENT

    IDENT  shift, and go to state 27


State 23

   15 comando_composto: T_BEGIN • comandos T_END

    $default  reduce using rule 16 (comandos)

    comandos  go to state 28


State 24

    5 bloco: parte_declara_vars $@2 $@3 comando_composto •

    $default  reduce using rule 5 (bloco)


State 25

    8 var: var VIRGULA • declara_vars

    $default  reduce using rule 10 ($@5)

    declara_vars  go to state 29
    $@5           go to state 22


State 26

    7 parte_declara_vars: $@4 VAR var DOIS_PONTOS • tipo PONTO_E_VIRGULA

    IDENT  shift, and go to state 30

    tipo  go to state 31


State 27

   11 declara_vars: $@5 IDENT •

    $default  reduce using rule 11 (declara_vars)


State 28

   15 comando_composto: T_BEGIN comandos • T_END

    T_END  shift, and go to state 32


State 29

    8 var: var VIRGULA declara_vars •

    $default  reduce using rule 8 (var)


State 30

   12 tipo: IDENT •

    $default  reduce using rule 12 (tipo)


State 31

    7 parte_declara_vars: $@4 VAR var DOIS_PONTOS tipo • PONTO_E_VIRGULA

    PONTO_E_VIRGULA  shift, and go to state 33


State 32

   15 comando_composto: T_BEGIN comandos T_END •

    $default  reduce using rule 15 (comando_composto)


State 33

    7 parte_declara_vars: $@4 VAR var DOIS_PONTOS tipo PONTO_E_VIRGULA •

    $default  reduce using rule 7 (parte_declara_vars)
